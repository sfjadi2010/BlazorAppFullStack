@page "/patients/create"
@inject BlazorAppFullStack.Data.BlazorAppFullStackContext DB
@using BlazorAppFullStack.Models
@inject NavigationManager NavigationManager

<PageTitle>Add Patient</PageTitle>

<h4>Add Patient</h4>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Patient" OnValidSubmit="AddPatient" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="street1" class="form-label">First Name:</label>
                <InputText id="street1" @bind-Value="Patient.Name.FirstName" class="form-control" />
                <ValidationMessage For="() => Patient.Name.FirstName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="street1" class="form-label">Middle Name:</label>
                <InputText id="street1" @bind-Value="Patient.Name.MiddleName" class="form-control" />
                <ValidationMessage For="() => Patient.Name.MiddleName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="street1" class="form-label">Lastst Name:</label>
                <InputText id="street1" @bind-Value="Patient.Name.LastName" class="form-control" />
                <ValidationMessage For="() => Patient.Name.LastName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="dateofbirth" class="form-label">DateOfBirth:</label> 
                <InputDate id="dateofbirth" @bind-Value="Patient.DateOfBirth" class="form-control" /> 
                <ValidationMessage For="() => Patient.DateOfBirth" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="street1" class="form-label">Street1:</label> 
                <InputText id="street1" @bind-Value="Patient.Address.Street1" class="form-control" />
                <ValidationMessage For="() => Patient.Address.Street1" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="street2" class="form-label">Street2:</label> 
                <InputText id="street2" @bind-Value="Patient.Address.Street2" class="form-control" />
                <ValidationMessage For="() => Patient.Address.Street2" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="city" class="form-label">City:</label> 
                <InputText id="city" @bind-Value="Patient.Address.City" class="form-control" />
                <ValidationMessage For="() => Patient.Address.City" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="state" class="form-label">State:</label> 
                <InputText id="state" @bind-Value="Patient.Address.State" class="form-control" />
                <ValidationMessage For="() => Patient.Address.State" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="zipcode" class="form-label">Zip Code:</label> 
                <InputText id="zipcode" @bind-Value="Patient.Address.ZipCode" class="form-control" />
                <ValidationMessage For="() => Patient.Address.ZipCode" class="text-danger" />
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/patients">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Patient Patient { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddPatient()
    {
        DB.Patient.Add(Patient);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/patients");
    }
}
